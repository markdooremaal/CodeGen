openapi: 3.0.0
info:
  description: This is the API for the 2.4 Code Generation Bank application
  version: "0.0.1"
  title: Bank API
paths:
  
  /Transactions: 
    get: #TODO: With filter options like IBAN, from/to -account
      security:
        - bearerAuth: []
      tags:
        - Transactions
      summary: Get all Transactions
      operationId: getAllTransactions
      description: Calling this allows you to fetch all transactions
      responses:
        "200":
          description: Array of relevant transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfTransactions"
        "400":
          description: bad input parameter
    post:
      security:
        - bearerAuth: []
      tags:
        - Transactions
      summary: Create a new transaction
      requestBody:
        description: Transaction object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      operationId: createTransaction
      description: Calling this allows you to create a transaction
      responses:
        "200":
          description: The transaction is made
        "400":
          description: bad input parameter

  /Transactions/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the transaction to get
      tags:
        - Transactions
      summary: Get a transaction by id
      operationId: getTransactionById
      description: Calling this allows you to fetch a specific transaction by id
      responses:
        "200":
          description: the transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnBodyTransaction"
        "400":
          description: bad input parameter

  /Users:
    get: #TODO: With filter options like first- lastname, IBAN
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Get all Users
      operationId: getAllUsers
      description: Calling this allows you to fetch all users
      responses:
        "200":
          description: The users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: bad input parameter
    post:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Create new user
      requestBody:
        description: User object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      operationId: createUser
      description: Calling this allows you to create a new user
      responses:
        "200":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: bad input parameter
  
  /Users/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      tags:
        - Users
      summary: Get a user by id
      operationId: getUserById
      description: Calling this allows you to fetch a specific user by id
      responses:
        "200":
          description: the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: bad input parameter
    put:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Update a user
      requestBody:
        description: User object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      operationId: updateUser
      description: Calling this allows you to update a user
      responses:
        "200":
          description: User updated
        "400":
          description: bad input parameter
    delete:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Makes a user inactive
      operationId: makeUserInactive
      description: Calling this allows you to make a user inactive
      responses:
        "200":
          description: User is now inactive
        "400":
          description: bad input parameter
  
  /BankAccounts:
    get:
      security:
        - bearerAuth: []
      tags:
        - Accounts
      summary: Get all Bank Accounts
      operationId: getAllAccounts
      description: Calling this allows you to fetch all Bank Accounts
      responses:
        "200":
          description: The Bank Accounts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankAccount"
        "400":
          description: bad input parameter
    post:
      security:
        - bearerAuth: []
      tags:
        - Accounts
      summary: Create a new BankAccount
      requestBody:
        description: Transaction object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankAccount"
      operationId: createAccount
      description: Calling this allows you to create a sBank Account
      responses:
        "200":
          description: Account created
        "400":
          description: bad input parameter

  /BankAccounts/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: IBAN of the Bank Account to get
      tags:
        - Accounts
      summary: Get a Bank Account by IBAN
      operationId: getAccountById
      description: Calling this allows you to fetch a specific Bank Account by id
      responses:
        "200":
          description: the Bank Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BankAccount"
        "400":
          description: bad input parameter
    put:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: IBAN of the Bank Account to update
      tags:
        - Accounts
      summary: Update a Bank Account by IBAN
      operationId: updateAccountById
      description: Calling this allows you to update a specific Bank Account by id
      responses:
        "200":
          description: Account updated
        "400":
          description: bad input parameter
    delete:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: IBAN of the Bank Account to close
      tags:
        - Accounts
      summary: Closes a Bank Account by IBAN
      operationId: closeAccountById
      description: Calling this allows you to close a specific Bank Account by id
      responses:
        "200":
          description: The Bank account will be closed
        "400":
          description: bad input parameter

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Transaction:
      type: object
      required:
        - accountFrom
        - accountTo
        - userPerforming # Can be set based on Bearer-Token
        - amount
        - timestamp
      properties:
        accountFrom:
          type: string
        accountTo:
          type: string
        userPerforming:
          type: integer
        amount:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time

    BankAccount:
      type: object
      required:
        - userId
        - type
        - status
        - absoluteLimit
      properties:
        userId:
          type: integer
        status:
          type: string
          enum:
            - open
            - closed
        type:
          type: string
          enum:
            - Regular
            - Savings
        balance:
          type: number
          format: double
        absoluteLimit:
          type: number
          format: double

    User:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
        - status
        - dayLimit
        - transactionLimit
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - Customer
            - Employee
        status:
          type: string
          enum:
            - active
            - inactive
        dayLimit:
          type: number
          format: double
        transactionLimit:
          type: number
          format: double

    ReturnBodyTransaction:
      description: Return body type of Transaction      
      type: object
      properties:
        Id:
          description: Unique transaction id
          type: integer
          example: 1
        accountFrom:
          description: Sending account
          type: string
          example: NL01INHO0000000001
        accountTo:
          description: Receiving account
          type: string
          example: NL01INHO0000000002
        userPerforming:
          description: Id of user performing the transaction
          type: integer
          example: 1
        amount:
          description: The amount of money
          type: number
          format: double
          example: 13.37
        timestamp:
          description: Date and time of the transaction
          type: string
          format: date-time
          example: 01-02-2021 12:06:03
    
    ArrayOfTransactions:
      description: Array of return body of Transactions
      type: array
      items:
        $ref: '#/components/schemas/ReturnBodyTransaction'

    ReturnBodyBankAccount:
      description: Return body type of BankAccount       
      type: object
    
    ReturnBodyUser:
      description: Return body type of User 
      type: object

